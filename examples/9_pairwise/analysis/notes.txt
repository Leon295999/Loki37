Re-formatting into a tabular dataset of durations

trj_durations.py <<pairs_heuristic.csv>> --column all

This processing code turns the internal pairwise flow representation into a nice
tabular dataset. It will always output the "duration" and "amount". The other
available column names are "fraction", "categ", "motif", "account, "timestamps". 
Here "fraction" corresponds to the share of the in-transaction. Using "all" or
"timestamps" gives two columns in the output ("timestamp_beg" & "timestamp_end").

Note that the defaults make it difficult to output pairs involving both existing~ 
and ~untracked funds. That is because these are two halves of the same whole and 
one should usually work with one or the other. Here I make it easy to output the 
exact durations and a lower-bound on broken pairs (no flags needed), or the exact 
durations and an upper-bound on broken pairs (use `--timewindow_beg`).

The following examples demonstrate the main functionalities:

`account_durations_lifo.csv`
`account_durations_mixed.csv`

  Again, this example takes the perspective of a single account, so there is 
  nothing complicated going on here. One-to-one correspondence between the 
  flows and the durations. Notice how the variables are passed over.

`network_durations_lifo.csv`
`network_durations_mixed.csv`

  Notice how the variables are passed over from the pairwise flow file. As 
  these durations come from a network, several involve transfers.

`network_durations_mixed_sm30000_min_unobs.csv`
`network_durations_mixed_sm30000_min.csv`

  No outside information is needed to get exact durations or a lower-bound.

  This corresponds to an approximation where untracked funds are seen as "removed": 
  Exact durations are reported as such, and durations are reported for broken pairs
  as a lower bound on ~untraked funds. In this scenario, pairs involving existing~ 
  funds are stubs with instantanous durations that are, by default, filtered out.

  To output the instantanous stubs, use the `--unobserved` flag. 

`network_durations_mixed_sm30000_max_unobs.csv`
`network_durations_mixed_sm30000_max.csv`

  With a given `--timewindow_beg` it is possible to retrieve upper-bounds.

  This corresponds to an approximation where untracked funds are seen as "static": 
  Exact durations are reported as such, and durations are reported for broken pairs
  as an upper bound on existing~ funds. The existing~ funds have been present from 
  `--timewindow_beg` while the ~untracked funds are incomplete pairs of indefinite 
  duration (i.e. they will never move again) and are, by default, filtered out.

  To output the indefinite-duration pairs, use the `--unobserved` flag. 

`network_durations_mixed_sm30000_end_unobs.csv`
`network_durations_mixed_sm30000_end.csv`

  Giving a `--timewindow_end` imposes an ending point for untracked funds seen as 
  "static", similar to the inferred final withdrawals within `follow-the-money`.

  By default, any flows ending at or after `--timewindow_end` are filtered out.
  This includes the inferred final withdrawals so long as `--timewindow_end` is 
  earlier than that used in the `follow-the-money` config file... perhaps best to 
  use the same `--timewindow_end` for the sake of clarity, or document well.

  To output the pairs ending at `--timewindow_end`, use the `--unobserved` flag. 